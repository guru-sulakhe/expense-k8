# a configMap is used to store non-confidential data in key-value pairs.
# This will helps in connecting to db-host from backend i..e ensuring connection to db
kind: configMap
apiVersion: v1
metadata: 
  name: backend
  namespace: expense
data:
  DB_HOST: mysql #mysql service component service name
--------
kind: Deployment
apiVersion: apps/v1
metadata:
  name: backend
  #creating mysql in expense namespace
  namespace: expense
  #thus labels are deployment related labels
  labels:
    component: backend
    project: expense
    tier: app
spec:
  replicas: 2
  selector: 
    matchLabels:
      component: backend
      tier: app
      project: expense
  #pod defintion
  template:
    metadata:
      labels:
        component: backend
        tier: app
        project: expense
    spec:
      initContainers: #run before the main containers run, if initcontainers fail then main containers will not run
      - name: init-myservice
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup mysql; do echo waiting for myservice; sleep 2; done"]
      containers:
      - name: backend
        image: guru1188/backend:v1.0
        readinessProbe: #This will define when our container is ready, mysql server is running on tcp protocol of port 3306, if not we should add http port
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10 #within 10 sec container should be ready
          periodSeconds: 5 #every 5 sec 
        livenessProbe: # this will health check the backend server for every time period by using a periodSeconds
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        envFrom:
        - configMapRef:
            name: backend #your backend configmap name


------
# for connection mysql and backend pods we need to ensure to include a service which will helps in communication between pods i.,e Cluster IP
# This service is used to call backend Pod, by using selectors of backend pod
apiVersion: v1
kind: Service
metadata: 
  name: backend
  #attaching to expense namespace
  namespace: expense
spec: 
  selectors:
    project: expense
    component: backend
    tier: app
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
    