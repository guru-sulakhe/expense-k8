kind: Deployment
apiVersion: apps/v1
metadata:
  name: mysql
  #creating mysql in expense namespace
  namespace: expense
  #thus labels are deployment related labels
  labels:
    component: mysql
    project: expense
    tier: db
spec:
  replicas: 2 #2 pods will be created 
  selector: 
    matchLabels:
      component: mysql
      tier: db
      project: expense
  #pod defintion
  template:
    metadata:
      labels:
        component: mysql
        tier: db
        project: expense
    spec:
      containers:
      - name: mysql
        image: guru1188/mysql:v1.0
        readinessProbe: #mysql server is running on tcp protocol of port 3306, if not we should add http port
          tcpSocket:
            port: 3306
          initialDelaySeconds: 10 #within 10 sec container should be ready
          periodSeconds: 5 #every 5 sec 
        livenessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 10
          periodSeconds: 5 #every 5 sec
# $ kubectl get pods -n expense
---
# for connection mysql and backend pods we need to ensure to include a service which will helps in communication between pods i.,e Cluster IP
# This service is used to call mysql Pod
# clusterIP will be accessed only inside the cluster, if you use nodePort then pods will be accessed outside the cluster which will leads to unknown accessing 
apiVersion: v1
kind: Service
metadata: 
  name: mysql
  #attaching to expense namespace
  namespace: expense
spec: 
  selectors:
    project: expense
    component: mysql
    tier: db
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
    